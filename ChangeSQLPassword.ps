<# 
.SYNOPSIS 
    Outputs the number of records in the specified SQL Server database table. 
 
.DESCRIPTION 
    This runbook demonstrates how to change the SQL user password dynamically
	
    This runbook also requires an Automation Credential asset be created before the runbook is 
    run, which stores the username and password of an account with access to the SQL Server. 
    That credential should be referenced for the SqlCredential parameter of this runbook. 
 
#> 
    param( 
        [parameter(Mandatory=$True)] 
        [string] $AzSrv="raacensusdatasrv.database.windows.net", 
         
        [parameter(Mandatory=$False)] 
        [string] $AzSrvDB = "master", 
         
        [parameter(Mandatory=$False)] 
        [string] $SqlCredentialAsset = "SQLChngAdmin"
    ) 

	$SQLPass = "test@1234"
	
	$SqlCredential = Get-AutomationPSCredential -Name $SqlCredentialAsset 
 
    if ($SqlCredential -eq $null) 
    { 
        throw "Could not retrieve '$SqlCredentialAsset' credential asset. Check that you created this first in the Automation service." 
    }   
    # Get the username and password from the SQL Credential 
    $SqlUsername = $SqlCredential.UserName 
    $SqlPass = $SqlCredential.GetNetworkCredential().Password 
 
    # Define the connection to the SQL Database 
    $Conn = New-Object System.Data.SqlClient.SqlConnection("Server=tcp:$AzSrv.database.windows.net,1433;Initial Catalog=$AzSrvDB;Persist Security Info=False;User ID=$SqlUsername;Password=$SqlPass;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;") 
	
	
         
    # Open the SQL connection 
    $Conn.Open() 
 
    # Define the SQL command to run. In this case we are getting the number of rows in the table 
    $Cmd=new-object system.Data.SqlClient.SqlCommand("alter login [raaprocess_Read] with  password = '$SQLPass'", $Conn) 
    $Cmd.CommandTimeout=120 
 
    # Execute the SQL command 
    $Ds=New-Object system.Data.DataSet 
    $Da=New-Object system.Data.SqlClient.SqlDataAdapter($Cmd) 
 
    # Close the SQL connection 
    $Conn.Close()